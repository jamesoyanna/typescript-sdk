import t from"isomorphic-unfetch";class e{constructor(t){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=t.apiKey,this.baseUrl=t.baseUrl||"https://jsonplaceholder.typicode.com"}async request(e,s){const r=`${this.baseUrl}${e}`,o=Object.assign({},s,{headers:{"Content-Type":"application/json","api-key":this.apiKey}}),a=await t(r,o);if(a.ok)return await a.json();throw new Error(a.statusText)}}const s="posts";class r extends e{}var o;o=r,[class extends e{async getPostById(t){return await this.request(`/${s}/${t}`)}async getPosts(){return await this.request(`/${s}`)}async createPost(t){return await this.request(`/${s}`,{method:"POST",body:JSON.stringify(t)})}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(e=>{Object.defineProperty(o.prototype,e,Object.getOwnPropertyDescriptor(t.prototype,e))})});export{r as default};
